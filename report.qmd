---
title: "`r params$center` Regional Growth Center"
format:
  docx:
    reference-doc: custom-reference-doc.docx
mainfont: "Poppins"
execute: 
  echo: false
  warning: false
  message: false
params:
  center: "SeaTac"
---

```{r}
library(tidyverse)
library(flextable)
library(openxlsx)
library(officer)
library(leaflet)
library(sf)
```

```{r data}

# tables

df <- read.csv("C:\\Users\\CLam\\github\\centers-monitoring\\data\\centers_information.csv")

df_ctr <- df |> 
  filter(name == params$center)

# shapes

rgc_shp <- readRDS("C:\\Users\\CLam\\github\\centers-monitoring\\data\\rgc_shape.rds")

rgc_ctr <- rgc_shp |>
  filter(name == params$center)

# test

emp <- readRDS("C:\\Users\\CLam\\github\\centers-monitoring\\data\\centers_employment.rds") |> 
  select(year, geography, grouping, estimate) |> 
  filter(year == 2023) |> 
  filter(geography == params$center & grouping == "Total")

main_tbl <- data.frame(
  center_name = params$center,
  center_type = df_ctr$center_type,
  jobs = as.character(emp$estimate)
)

main_tbl2 <- main_tbl |> 
  pivot_longer(cols = colnames(main_tbl),
               names_to = "join_field",
               values_to = "Status_filled"
               )

crit_df_main <- read.xlsx("criteria-table-ref.xlsx")
crit_df <- crit_df_main |> 
  left_join(main_tbl2, by = "join_field") |> 
  mutate(Status = Status_filled)

crit_df2  <- crit_df |> 
  select(-join_field, -Status_filled)

```

## Designation Recommendation

## Background

`r df_ctr$information`

```{r table settings}

i <- 16.5 # width of the side borders in the word_document output (in centimeters)
w <- i*0.3937 # width of the side borders in the word_document output (in inches)

```

```{r criteria table}

std_border <- fp_border(color = "gray")

cft <- crit_df2 |>
  flextable() |> 
  bold(part = "header") |>
  vline(j = c('Criteria'), border = std_border, part = "all") |> 
  hline(border = std_border, part = "body") |> 
  width(j=1, width = 2) |> # total width = 6.5in
  width(j=2, width = 4.5) |> 
  align(align = "left", part = "all") |> 
  bg(bg = "grey", part = "header")
  
# cft_auto_widths <- dim(cft)$widths/sum(dim(cft)$widths)
# cft <- width(cft, width = w * cft_auto_widths) 

cft
```

## Comments

## Map

```{r map}
m <- leaflet(options = leafletOptions(zoomControl=FALSE)) |>
  addProviderTiles(providers$Esri.WorldStreetMap) |>
  # addProviderTiles(providers$Stadia.StamenTonerLite) |>
  # addProviderTiles(providers$Esri.NatGeoWorldMap) |>
  # addProviderTiles(providers$CartoDB.Positron) |>
  addPolygons(data = rgc_ctr,
              fillColor = "76787A",
              weight = 4,
              opacity = 1.0,
              color = "#EB4584",
              dashArray = "4",
              fillOpacity = 0.0)

m
```

