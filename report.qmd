---
title: "`r params$center` Regional Growth Center"
format:
  docx:
    reference-doc: custom-reference-doc.docx
mainfont: "Poppins"
execute: 
  echo: false
  warning: false
  message: false
params:
  center: "Auburn"
 
---

```{r}
library(tidyverse)
library(flextable)
library(openxlsx)
library(officer)
library(leaflet)
library(sf)
```

```{r gen data}

# tables

df <- read.csv("C:\\Users\\CLam\\github\\centers-monitoring\\data\\centers_information.csv")

df_ctr <- df |> 
  filter(name == params$center)

# shapes

wgs84 <- 4326
rgc_shp <- readRDS("C:\\Users\\CLam\\github\\centers-reports\\data\\proposed_rgcs.rds")

rgc_ctr <- rgc_shp |>
  st_transform(wgs84) |> 
  filter(name_monitoring == params$center)

```

```{r transit access}
transit_stops <- readRDS('data/transit_stop_data.rds')

transit_stops_df <- transit_stops |> 
  filter(geography == params$center)|> 
  filter(mode != "All Transit Stops")

ctrs_transit_srv <- list()

for(i in c("stops_2025", "stops_2050")) {
  
  if(i == "stops_2050") {
    modes <- transit_stops_df |> 
      dplyr::filter(.data[[i]] != 0 & .data[['stops_2025']] == 0) |> 
      pull(mode)
    
    if(length(modes) == 0) {
      modes_str <- NULL
    } else {
      modes_str <- paste("Planned: ", paste(as.character(modes), collapse = ", "))
    }
    
  } else {
    modes <- transit_stops_df |> 
      dplyr::filter(.data[[i]] != 0) |> 
      pull(mode)
    
    modes_str <- paste(as.character(modes), collapse = ", ")
  }
  
  ctrs_transit_srv[[i]] <- modes_str
}
```

```{r assemble table}
assembled_tbl <- data.frame(
  transit_service = paste0(ctrs_transit_srv$stops_2025, "\n", ctrs_transit_srv$stops_2050)
)

assembled_tbl_pivot <- assembled_tbl |> 
  pivot_longer(cols = colnames(assembled_tbl),
               names_to = "join_field",
               values_to = "Status_filled"
               )

crit_df_main <- read.xlsx("criteria-table-ref.xlsx")

crit_df <- crit_df_main |>
  left_join(assembled_tbl_pivot, by = "join_field") |>
  mutate(Status = Status_filled)|> 
  select(-join_field, -Status_filled)

```

:::{custom-style="Designation Recommendation"}
Designation Recommendation
:::

# Background

```{r map}

m <- leaflet(options = leafletOptions(zoomControl=FALSE)) |>
  # addProviderTiles(providers$Esri.WorldStreetMap) |>
  # addProviderTiles(providers$Stadia.StamenTonerLite) |>
  addProviderTiles(providers$Esri.NatGeoWorldMap) |>
  # addProviderTiles(providers$CartoDB.Positron) |>
  addPolygons(data = rgc_ctr,
              fillColor = "76787A",
              weight = 4,
              opacity = 1.0,
              color = "#EB4584",
              dashArray = "4",
              fillOpacity = 0.0)

m
```

`r df_ctr$information`

```{r table settings}

i <- 16.5 # width of the side borders in the word_document output (in centimeters)
w <- i*0.3937 # width of the side borders in the word_document output (in inches)

```

```{r criteria table}

std_border <- fp_border(color = "lightgray")

# cft <- crit_df2 |>
cft <- crit_df |>
  flextable() |> 
  font(fontname = "Poppins", part = "all") |> 
  bold(part = "header") |>
  vline(j = c('Criteria'), border = std_border, part = "all") |> 
  hline(border = std_border, part = "body") |> 
  width(j=1, width = 2) |> # total width = 7.5in
  width(j=2, width = 5.5) |> 
  align(align = "left", part = "all") |> 
  bg(bg = "lightgray", part = "header")
  
# cft_auto_widths <- dim(cft)$widths/sum(dim(cft)$widths)
# cft <- width(cft, width = w * cft_auto_widths) 

cft
```


:::{custom-style="Comment Header"}
Jurisdiction Comments / Additional Context
:::





